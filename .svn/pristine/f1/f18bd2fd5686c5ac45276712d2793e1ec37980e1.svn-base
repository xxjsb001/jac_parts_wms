package com.vtradex.wms.server.telnet.shell.pick;

import java.io.IOException;

import org.apache.commons.lang.StringUtils;

import net.wimpi.telnetd.net.Connection;

import com.vtradex.kangaroo.shell.BreakException;
import com.vtradex.kangaroo.shell.ContinueException;
import com.vtradex.kangaroo.shell.Thorn4BaseShell;
import com.vtradex.wms.server.model.inventory.WmsInventory;
import com.vtradex.wms.server.telnet.dto.WmsPickContainerDTO;
import com.vtradex.wms.server.telnet.pick.WmsPickRFManager;
import com.vtradex.wms.server.web.filter.WmsWorkerHolder;

public class WmsPickContainerShell4 extends Thorn4BaseShell{
	
	public static final String PAGE_ID = "wmsPickContainerShell4";
	
	private final WmsPickRFManager pickRFManager;
	
	public WmsPickContainerShell4(WmsPickRFManager pickRFManager) {
		this.pickRFManager = pickRFManager;
	}
	@Override
	protected void mainProcess(Connection connection) throws BreakException,
			ContinueException, IOException, Exception {
		WmsPickContainerDTO	dto = (WmsPickContainerDTO) this.getParentContext().get("CURRENT_DTO");
		this.output("器具型号", dto.getType());
		this.output("物料编码", dto.getItemCode());
		this.output("物料名称", dto.getItemName());
		this.output("供应商编码", dto.getSupplier());
		this.output("待拣数量", dto.getUnMoveQuantityBU().toString());
		String locCode = this.getTextField("拣选库位");
		if(StringUtils.isEmpty(locCode)){
			this.setStatusMessage("拣选库位不能为空");
		}
		dto.setPickLocCode(locCode);
		if(!locCode.equals(dto.getLocationCode())){
			WmsInventory inv =pickRFManager.getInventoryQtyByLocation(dto.getPickLocCode(),dto.getItemCode(),dto.getSupplier());
			if(inv == null){
				this.context.put("CURRENT_DTO", dto);
				this.forward(WmsPickContainerShell.PAGE_ID,"库位未找到库存，请重新输入");
			}
			if(inv.getAvailableQuantityBU() < dto.getUnMoveQuantityBU()){
				dto.setUnMoveQuantityBU(inv.getAvailableQuantityBU());
			}
			dto.setInventoryId(inv.getId());
		}
		this.context.put("CURRENT_DTO", dto);
		this.forward(WmsPickContainerShell2.PAGE_ID);
	}

}
