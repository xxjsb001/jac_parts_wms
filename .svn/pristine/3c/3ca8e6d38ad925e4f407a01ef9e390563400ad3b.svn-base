返回列表 = 创建列表()

待上架总数量BU = 计划移位数量BU

R101_越库上架子规则()

// 托盘和散货都支持上架时补货, 托盘参与补货只寻找单次补货量为托的区域
上架支持单次补货量 = 包装级别
如果(是否托盘 == "是") {
	上架支持单次补货量 = "托"
}

打印("----上架支持单次补货量:" + 上架支持单次补货量)

如果(待上架总数量BU > 0) {
	R101_上架补货子规则()
}

打印("----上架补货后, 剩余待上架总数量:" + 待上架总数量BU)

如果(待上架总数量BU > 0){

	打印("----执行正常上架规则....")

	上架策略对象 = 查表("R101_上架_上架规则表",货主,单据类型,是否托盘,包装级别,货品状态)
	如果(上架策略对象 == 空){
	    上架策略对象 = 查表("R101_上架_上架规则表",货主,单据类型,是否托盘,"-",货品状态)
	}
	如果(上架策略对象 == 空){
	    异常("[" + 拼接字符串(货主,单据类型,是否托盘,包装级别,货品状态) +"]" + "查找" + "R101_上架_上架规则表," + "未找到数据!")
	}
	入锁库位集 = 多值查表("R101_基础数据_库位出入锁表","入锁")
	库位列表 = 创建列表()
	上架策略 = 创建对象()
	$库位定位分类值="(" + 上架策略对象.库位定位分类  + ")"
	$库位定位分类集合=分解列表($库位定位分类值)
	每个($临时库位定位分类 : $库位定位分类集合){
	     如果(待上架总数量BU > 0){	
			库位定位分类集 = 多值查表("R101_基础数据_库位定位分类表",$临时库位定位分类)
			
			目标库位包装级别 = 包装级别
			$库位定位分类特性集 = 多值查表("R101_基础数据_库位定位分类特性表")
			每个($库位定位分类特性 : $库位定位分类特性集) {
				如果($临时库位定位分类 == $库位定位分类特性.库位定位分类) {
					目标库位包装级别 = $库位定位分类特性.包装级别
				}
			}

			每个($库位定位分类 : 库位定位分类集){

				库位定位分类 = $库位定位分类
				出入锁拼接条件 = ""
				出入锁拼接条件 = 出入锁拼接条件(入锁库位集,库位定位分类,出入锁拼接条件).拼接条件返回值     
				
				上架策略库位列表 = 创建列表()
				上架策略库位列表 = 获取上架策略库位列表($库位定位分类,出入锁拼接条件,月台区号, 目标库位包装级别).上架策略库位列表返回值
				$库位承载 = 查表("R101_基础数据_库位承载类型表",库位定位分类.库位承载类型)
			 	
			 	如果(是否托盘 == "是" && 待上架总数量BU > 0) {
			 		R101_托盘上架子规则()
			    } 
	
			  	如果(是否托盘 == "否" && 待上架总数量BU > 0){
			  		R101_非托盘上架子规则()
				}		   
			}
		}	
	}
}

出入锁拼接条件(入锁库位集,库位定位分类,出入锁拼接条件){
	$入锁库位集大小 = 0
	$游标 = 1
	$拼接条件 = 出入锁拼接条件
	如果(入锁库位集 != 空){
		$入锁库位集大小 = 列表大小(入锁库位集)
		每个($入锁库位:入锁库位集){
			如果($入锁库位.库区 == 库位定位分类.库区){
				$区区间集=分解列表($入锁库位.区区间)
				$区区间对象=赋值($区区间集,"开始值","结束值")	
				$排区间集=分解列表($入锁库位.排区间)
				$排区间对象=赋值($排区间集,"开始值","结束值")	
				$列区间集=分解列表($入锁库位.列区间)
				$列区间对象=赋值($列区间集,"开始值","结束值")	
				$层区间集=分解列表($入锁库位.层区间)
				$层区间对象=赋值($层区间集,"开始值","结束值")
				$拼接条件 = 拼接条件($拼接条件,$区区间对象.开始值,$区区间对象.结束值,
			    $排区间对象.开始值,$排区间对象.结束值,
			    $列区间对象.开始值,$列区间对象.结束值,
			    $层区间对象.开始值,$层区间对象.结束值)
			    	    
			    如果($游标 < $入锁库位集大小){
			    	$拼接条件 = $拼接条件 + " OR "
			    }
			}		
		    $游标 = $游标 + 1
		}
	}
	拼接条件返回值 = $拼接条件
}

获取上架策略库位列表(库位定位分类, 出入锁拼接条件, 月台区号, 目标库位包装级别){
	$上架策略库位列表 = 创建列表()
	$区区间集 = 分解列表(库位定位分类.区区间)
	$区区间对象 = 赋值($区区间集,"开始值","结束值")	

	$排区间集 = 分解列表(库位定位分类.排区间)
	$排区间对象 = 赋值($排区间集,"开始值","结束值")	

	$列区间集 = 分解列表(库位定位分类.列区间)
	$列区间对象 = 赋值($列区间集,"开始值","结束值")	

	$层区间集 = 分解列表(库位定位分类.层区间)
	$层区间对象 = 赋值($层区间集,"开始值","结束值")

	$库位结果集 = 创建对象()
	$库位结果集 = 数据查询("R101_库位","仓库ID",仓库ID,"库区",库位定位分类.库区,
	"区区间开始值",$区区间对象.开始值,"区区间结束值",$区区间对象.结束值,
	"排区间开始值",$排区间对象.开始值,"排区间结束值",$排区间对象.结束值,
	"列区间开始值",$列区间对象.开始值,"列区间结束值",$列区间对象.结束值,
	"层区间开始值",$层区间对象.开始值,"层区间结束值",$层区间对象.结束值,
	"拼接条件",出入锁拼接条件)
	
	如果($库位结果集 == 空){
	 	异常(库位定位分类 + "未找到符合条件的库位!")
	}
	每个($库位:$库位结果集.库位){
		$区号差值 = $库位.区 - 月台区号
		$库位.区差方 = $区号差值 * $区号差值
		$库位.包装级别 = 目标库位包装级别
		$库位.已上架数量 = 0
		$库位.已放满 = "否"
	 	加入列表($上架策略库位列表, $库位)
	}
	上架策略库位列表返回值 = $上架策略库位列表
}



库位混放校验(库位,混放类型,货品序号,批次序号){
	$混放是否成立=1
	如果(库位.库存 == 空  || 库位.库存.序号  == 空){
		$混放是否成立 = 1
	}
	每个($临时:库位.库存){
		如果($临时.序号  != 空  && $临时.数量 > 0){
			$混放是否成立 = 0
		}
	}
	如果(混放类型.货品混放 == "是" && 混放类型.存货日期混放 == "是" && 混放类型.SOI混放 == "是"  && 混放类型.供应商混放 == "是" ){
		$混放是否成立 = 1
	}
	如果($混放是否成立 == 0){
		如果(混放类型.货品混放 == "否"){
			$货品不混放=0
			如果(混放类型.存货日期混放 == "是" && 混放类型.SOI混放 == "是"  && 混放类型.供应商混放 == "是" ){
				每个($库存 : 库位.库存){
					如果($库存.货品序号  == 货品序号  && $库存.数量  > 0){
						$货品不混放 = 1
					}
				}
			}
			
			如果($货品不混放 == 0){
				$混放是否成立 = 0
				每个($库存 : 库位.库存){
					如果($库存.货品序号  == 货品序号  && $库存.数量  > 0){
						$混放是否成立 = 1
						$库存批次属性=数据查询("R101_批次属性数据源", "批次序号", $库存.批次序号)
						$上架批次属性=数据查询("R101_批次属性数据源", "批次序号", 批次序号)
						如果(混放类型.存货日期混放  == "否"){
							如果(格式化日期($库存批次属性.存货日期) != 格式化日期($上架批次属性.存货日期)){
								$混放是否成立 = 0
							}
						}
						如果(混放类型.SOI混放  == "否"){
							如果($库存批次属性.收货单号 != $上架批次属性.收货单号){
								$混放是否成立= 0
							}
						}
						
						如果(混放类型.供应商混放  == "否"){
							如果($库存批次属性.供应商 != $上架批次属性.供应商){
								$混放是否成立 = 0
							}
						}
					}
				
				}
			}
			如果($货品不混放  == 1){
				$混放是否成立 = 1
			}
		}
		如果(混放类型.货品混放 == "是"){
			$货品批次相同=1
			每个($库存 : 库位.库存){
				如果($库存.货品序号  == 货品序号  && $库存.数量  > 0){
					$库存批次属性=数据查询("R101_批次属性数据源", "批次序号", $库存.批次序号)
					$上架批次属性=数据查询("R101_批次属性数据源", "批次序号", 批次序号)
					如果(混放类型.存货日期混放  == "否"){
						如果(格式化日期($库存批次属性.存货日期) != 格式化日期($上架批次属性.存货日期)){
							$货品批次相同 = 0
						}
					}
					
					如果(混放类型.SOI混放  == "否"){
						如果($库存批次属性.收货单号 != $上架批次属性.收货单号){
							$货品批次相同 = 0
						}
					}
					如果(混放类型.供应商混放  == "否"){
						如果($库存批次属性.供应商 != $上架批次属性.供应商){
							$货品批次相同 = 0
						}
					}
				}
			}
			如果($货品批次相同 == 1){
				$混放是否成立 = 1
			}
		}
	}
	混放是否成立 = $混放是否成立
}

补货区拼接条件(库位定位分类列表, 补货区拼接条件字符串) {

	$游标 = 1
	$拼接条件 = 补货区拼接条件字符串
	
	如果(库位定位分类列表 != 空){
		$库位定位分类列表大小 = 列表大小(库位定位分类列表)
		
		每个($库位定位分类 : 库位定位分类列表){

		    $区区间集=分解列表($库位定位分类.区区间)
		    $区区间对象=赋值($区区间集,"开始值","结束值")	
		    
		    $排区间集=分解列表($库位定位分类.排区间)
		    $排区间对象=赋值($排区间集,"开始值","结束值")	
		    
		    $列区间集=分解列表($库位定位分类.列区间)
		    $列区间对象=赋值($列区间集,"开始值","结束值")	
		    
		    $层区间集=分解列表($库位定位分类.层区间)
		    $层区间对象=赋值($层区间集,"开始值","结束值")
		    
		    $拼接条件 = 出锁拼接($拼接条件, $库位定位分类.库区, $区区间对象.开始值, $区区间对象.结束值,
		    $排区间对象.开始值,$排区间对象.结束值,
		    $列区间对象.开始值,$列区间对象.结束值,
		    $层区间对象.开始值,$层区间对象.结束值)
		    
			//打印("----拼接条件:" + $拼接条件)
		    	    
			如果($游标 < $出锁库位集大小){
		    	$拼接条件 = $拼接条件 + " OR "
		    }	
		    $游标 = $游标 + 1
		}
	}
	拼接条件返回值 = $拼接条件
}
