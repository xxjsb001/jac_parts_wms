
补货待上架总数量 = 待上架总数量BU
待补货明细集 = 创建列表() // 存放需要补货的货品数量和补货区域

// 获取所有支持补货的区域
$库位定位分类特性集 = 多值查表("R101_基础数据_库位定位分类特性表")
$补货区列表 = 创建列表()
每个($库位定位分类特性 : $库位定位分类特性集) {
	如果($库位定位分类特性.是否支持补货 == "是") {
		加入列表($补货区列表, $库位定位分类特性)
	}
}

//打印("----补货区列表:" + $补货区列表)

如果($补货区列表 != 空 && 列表大小($补货区列表) != 0) {
	每个($补货区对象 : $补货区列表) {
		$安全库存集 = 多值查表("R101_补货_库位分类安全库存表", $补货区对象.库位定位分类)

		//打印("----安全库存集:" + $安全库存集)

		如果($安全库存集 != 空 && 列表大小($安全库存集) != 0) {
			每个($安全库存 : $安全库存集) {

				$货品代码字符串1 =  货品代码 + ""
				$货品代码字符串2 =  $安全库存.货品代码 + ""

				// 上架时的包装级别必须与安全库存中的单次补货量匹配，否则不参与补货
				如果($安全库存.上架支持补货 == "是" && $货品代码字符串1 == $货品代码字符串2 && $安全库存.单次补货量 == 上架支持单次补货量) {

					打印("----安全库存:" + $安全库存)

					// 获取补货区的区排信息
					补货区拼接条件字符串 = ""
					补货区库位定位分类列表 = 多值查表("R101_基础数据_库位定位分类表", $补货区对象.库位定位分类)
					补货区拼接条件字符串 = 补货区拼接条件(补货区库位定位分类列表 , 补货区拼接条件字符串).拼接条件返回值

					// 获取待补货的明细在补货区中的现有库存
					$已存在补货库存可用数 = 0
					$已存在补货库存 = 数据查询("R101_上架_补货数据源", "仓库序号",仓库ID, "货品序号",货品序号, "补货区拼接条件",补货区拼接条件字符串)
					
					// 打印("----已存在补货库存----" + $已存在补货库存)
					
					如果($已存在补货库存 != 空 && 列表大小($已存在补货库存) != 0) {
						$已存在补货库存可用数 = $已存在补货库存.库存可用数量
					}
					打印("----已存在补货库存可用数----" + $已存在补货库存可用数)

					// 获取补货计划中未完成的补货任务
					$未完成补货明细数量BU = 0
					$未完成补货明细 = 数据查询("R101_上架_未完成补货单数据源", "仓库序号",仓库ID, "补货区", $补货区对象.库位定位分类, "货品代码",货品代码)
					
					// 打印("----未完成补货明细----" + $未完成补货明细)
					
					如果($未完成补货明细 != 空 && 列表大小($未完成补货明细) != 0) {
						$未完成补货明细数量BU = $未完成补货明细.待补货数量BU
					}
					$总库存数 = $未完成补货明细数量BU + $已存在补货库存可用数
					
					// 打印("----总库存数: " + $总库存数)

					如果($总库存数 < $安全库存.补货下限) {
						$待补货明细 = 创建对象()

						// 托盘, 其中 '补货待上架总数量' 为：准备上架的托盘数量
						如果($安全库存.单次补货量 == "托") {
							$补货上限 = $安全库存.补货上限 - $未完成补货明细数量BU - $已存在补货库存可用数
							
							打印("----托盘, 补货上限: " + $补货上限)
							打印("----托盘, 补货待上架总数量: " + 补货待上架总数量)
							$临时补货待上架总数量 = 补货待上架总数量 * 每托数量

							如果($补货上限 > 0 && 补货待上架总数量 > 0) {
								$临时待补货托数 = 整除($补货上限, 每托数量)
								如果($临时待补货托数 <= 0) {
									$待补货明细.计划补货数量BU = 每托数量
									$待补货明细.托数 = 1
									补货待上架总数量 = 补货待上架总数量 - 1

									$待补货明细.补货区 = $补货区对象.库位定位分类
									$待补货明细.补货区包装级别 = $补货区对象.包装级别
									$待补货明细.单次补货量 = $安全库存.单次补货量
									加入列表(待补货明细集, $待补货明细)
								}
								如果($临时待补货托数 > 0 && 补货待上架总数量 >= $临时待补货托数) {
									$待补货明细.计划补货数量BU = $临时待补货托数 * 每托数量
									$待补货明细.托数 = $临时待补货托数
									补货待上架总数量 = 补货待上架总数量 - $临时待补货托数

									$待补货明细.补货区 = $补货区对象.库位定位分类
									$待补货明细.补货区包装级别 = $补货区对象.包装级别
									$待补货明细.单次补货量 = $安全库存.单次补货量
									加入列表(待补货明细集, $待补货明细)
								}
								如果($临时待补货托数 > 补货待上架总数量) {
									$待补货明细.计划补货数量BU = 补货待上架总数量 * 每托数量
									$待补货明细.托数 = 补货待上架总数量
									补货待上架总数量 = 0

									$待补货明细.补货区 = $补货区对象.库位定位分类
									$待补货明细.补货区包装级别 = $补货区对象.包装级别
									$待补货明细.单次补货量 = $安全库存.单次补货量
									加入列表(待补货明细集, $待补货明细)
								}
							}
						}

						// 非托盘
						如果($安全库存.单次补货量 != "托"){
							$补货上限 = $安全库存.补货上限 - $未完成补货明细数量BU - $已存在补货库存可用数
							
							打印("----补货上限" + $补货上限)

							如果($补货上限 > 0 && 补货待上架总数量 > 0) {

								// 安全库存设置中的单次补货量的包装单位
								$包装单位 = 数据查询("R101_上架_货品包装数据源", "货品代码",货品代码, "包装级别",$安全库存.单次补货量)
								$单次补货 = 整除($补货上限, $包装单位.包装件装量) * $包装单位.包装件装量

								打印("----单次补货" + $单次补货)
								打印("----补货待上架总数量" + 补货待上架总数量)

								如果(补货待上架总数量 > $单次补货) {
									$待补货明细.计划补货数量BU = $单次补货
									补货待上架总数量 = 补货待上架总数量 - $单次补货
									$单次补货 = 0
								}
								如果(补货待上架总数量 <= $单次补货) {
									$待补货明细.计划补货数量BU = 补货待上架总数量
									补货待上架总数量 = 0
								}
								//打印("----计划补货数量BU: " + $待补货明细.计划补货数量BU)
								//打印("----补货待上架总数量: " + 补货待上架总数量)

								如果($待补货明细.计划补货数量BU > 0) {
									$待补货明细.补货区 = $补货区对象.库位定位分类
									$待补货明细.补货区包装级别 = $补货区对象.包装级别
									$待补货明细.单次补货量 = $安全库存.单次补货量
									加入列表(待补货明细集, $待补货明细)
								}
							}
						}
					}
				}
			}
		}
	}
}


打印("---->>>>>>>上架补货待补货明细集:" + 待补货明细集)

// 补货明细上架分配
如果(待补货明细集 != 空 && 列表大小(待补货明细集) != 0) {

	入锁库位集 = 多值查表("R101_基础数据_库位出入锁表", "入锁")

	每个($待补货明细 : 待补货明细集) {
		$补货区库位定位分类列表 = 多值查表("R101_基础数据_库位定位分类表", $待补货明细.补货区)

		每个($库位定位分类 : $补货区库位定位分类列表) {
			补货区上架库位定位分类 = $库位定位分类

			出入锁拼接条件 = ""
			出入锁拼接条件 = 出入锁拼接条件(入锁库位集,库位定位分类,出入锁拼接条件).拼接条件返回值

			// 打印("----补货区上架库位定位分类: " + 补货区上架库位定位分类)

			可上架库位集 = 创建列表()
			可上架库位集 = 获取上架策略库位列表(补货区上架库位定位分类, 出入锁拼接条件,月台区号, 目标库位包装级别).上架策略库位列表返回值

			打印("----可上架库位集: " + 可上架库位集)

			如果(可上架库位集 != 空 && 列表大小(可上架库位集) != 0) {
				列表对象排序(可上架库位集, "区差方","升序", "动线号","升序", "库位占用比例","降序")

				$库位承载 = 查表("R101_基础数据_库位承载类型表", $库位定位分类.库位承载类型)
				$混放类型 = 查表("R101_库位混放类型规则表", $库位定位分类.混放类型)

				每个($库位 : 可上架库位集) {
					如果($待补货明细.计划补货数量BU > 0 && $库位.已放满 == "否") {
						$混放是否成立 = 库位混放校验($库位, $混放类型, 货品序号, 批次序号).混放是否成立

						//打印("----混放是否成立: " + $混放是否成立)

						如果($混放是否成立 == 1) {
							$库位.承载托数 = $库位承载.托数  	
							$库位.承载重量 = $库位承载.重量
							$库位.承载体积 = $库位承载.体积
							$库位.承载数量 = $库位承载.数量

							如果($库位.承载重量 == 0 && $库位.承载体积 == 0 && $库位.承载数量 == 0){
							    $临时对象 = 创建对象()
							    $临时对象.越库移位 = "否"
								$临时对象.库位序号 = $库位.库位序号
								$临时对象.库位代码 = $库位.库位代码
								$临时对象.上架数量 = $待补货明细.计划补货数量BU	
								加入列表(返回列表, $临时对象)	
								$待补货明细.计划补货数量BU = 0
								待上架总数量 = 待上架总数量 - $临时对象.上架数量
							}

							如果($库位.承载重量 == 0){
							    $库位.承载重量 = 10000
							} 
							 如果($库位.承载体积 == 0){
							    $库位.承载体积 = 10000
							}
							如果($库位.承载数量 == 0){
							    $库位.承载数量 = 9000000
							}
							$库位货品重量=0
							$库位货品体积=0
							如果($库位.库位占用比例  > 0){
								每个($库存 : $库位.库存){
									如果($库存.数量 != 0 && $库存.包装重量 > $库位货品重量){
										$库位货品重量 = $库存.包装重量
									}
									如果($库存.数量 != 0 && $库存.包装体积 > $库位货品体积){
										$库位货品体积 = $库存.包装体积
									}
							    }  
							}
							$补货区包装单位 = 数据查询("R101_上架_货品包装数据源", "货品代码",货品代码, "包装级别",$待补货明细.补货区包装级别)
							如果($库位货品重量 < $补货区包装单位.包装重量){
			    				$库位货品重量 = $补货区包装单位.包装重量
			    			}
							如果($库位货品体积 < $补货区包装单位.包装体积){
								$库位货品体积 = $补货区包装单位.包装体积
							}

							$按重量总可上架数量 = $库位.承载重量 / $库位货品重量
							$按体积总可上架数量 = $库位.承载体积 / $库位货品体积      
							$按数量总可上架数量 = $库位.承载数量
							    
							$按重量已上架数量 = $按重量总可上架数量 * $库位.库位占用比例 / 100
							$按体积已上架数量 = $按体积总可上架数量 * $库位.库位占用比例 / 100      
							$按数量已上架数量 = $按数量总可上架数量 * $库位.库位占用比例 / 100
							    
							$按重量可上架数量 = $按重量总可上架数量 - $按重量已上架数量 - $库位.已上架数量
							$按体积可上架数量 = $按体积总可上架数量 - $按体积已上架数量 - $库位.已上架数量        
							$按数量可上架数量 = $按数量总可上架数量 - $按数量已上架数量 - $库位.已上架数量
							               
							$按重量可上架数量 = 舍尾取整($按重量可上架数量)
							$按体积可上架数量 = 舍尾取整($按体积可上架数量)
							$按数量可上架数量 = 舍尾取整($按数量可上架数量)
							$可上架数量 = 最小($按重量可上架数量, $按体积可上架数量, $按数量可上架数量)
							$可上架数量 = 舍尾取整($可上架数量)

							$待补货数量 = $待补货明细.计划补货数量BU / $补货区包装单位.包装件装量
							$待补货数量 = 舍尾取整($待补货数量)

							打印("----库位：" + $库位)
							打印("----可上架数量:  " + $可上架数量)
							打印("----待补货数量:  " + $待补货数量)
							 
							如果($待补货数量 > 0 && $可上架数量 >= $待补货数量){
								$临时对象 = 创建对象()
								$临时对象.越库移位 = "否"
								$临时对象.库位序号 = $库位.库位序号
								$临时对象.库位代码 = $库位.库位代码
								$临时对象.上架数量 = $待补货数量 * $补货区包装单位.包装件装量
								加入列表(返回列表, $临时对象)

								$库位.已上架数量 = $库位.已上架数量 + $待补货数量

								$待补货明细.计划补货数量BU = 0
								$待补货数量 = 0

								如果(上架支持单次补货量 == "托") {
									待上架总数量BU = 待上架总数量BU - $待补货明细.托数
									$待补货明细.托数 = 0
								}
								如果(上架支持单次补货量 != "托") {
									待上架总数量BU = 待上架总数量BU - $临时对象.上架数量
								}
							}
							如果($待补货数量 > 0 && $可上架数量 > 0 && $可上架数量 < $待补货数量){
								$临时对象 = 创建对象()
								$临时对象.越库移位 = "否"
								$临时对象.库位序号 = $库位.库位序号
								$临时对象.库位代码 = $库位.库位代码
								$临时对象.上架数量 = $可上架数量 * $补货区包装单位.包装件装量
								加入列表(返回列表, $临时对象)

								$库位.已上架数量 = $库位.已上架数量 + $可上架数量
								$库位.已放满 = "是"

								$待补货明细.计划补货数量BU = $待补货明细.计划补货数量BU - $临时对象.上架数量
								$待补货数量 = $待补货数量 - $可上架数量

								如果(上架支持单次补货量 == "托") {
									待上架总数量BU = 待上架总数量BU - $待补货明细.托数
								}
								如果(上架支持单次补货量 != "托") {
									待上架总数量BU = 待上架总数量BU - $临时对象.上架数量
								}
							}
						}
					}
				}
			}
		}
	}
}

打印("---->>>>>>>> 返回列表: " + 返回列表)